"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import time
from pathlib import Path
import hvac
import sys
import secrets
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# Loading .env
load_dotenv(dotenv_path='.env')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secrets.token_hex(32)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Vault Authentication
client = hvac.Client(url=os.getenv('VAULT_URL'), token=os.getenv('VAULT_TOKEN'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Installing the apps of the project
    'backend',
    'club',
    'events',
    'auth_users',
    'media_manager',

    # Django REST API
    'rest_framework',

    # # API Apps
    # 'events.apps.EventsConfig',

    # AWS Cogntio Auth 3rd party library
    'pycognito'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Session
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_COOKIE_AGE = 1800 # Session age in seconds (30 Minutes)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True # Session expires when the user closes the browser
SESSION_COOKIE_NAME = 's_id'
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True



# Check if the client is authenticated with valut, then connect to database
if client.is_authenticated():
    # Reading DB secrets from vault server
    db_secret = client.secrets.kv.v2.read_secret(mount_point='Key-Value', path='/database')
    # Access the secret data
    db_secret_data = db_secret['data']['data']

    # Database
    # https://docs.djangoproject.com/en/4.1/ref/settings/#databases
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': db_secret_data['name'],
            'USER': db_secret_data['user'],
            'PASSWORD': db_secret_data['password'],
            'HOST': db_secret_data['host'],
            'PORT': db_secret_data['port'],
        }
    }

    # Reading AWS secrets from vault server
    aws_secret = client.secrets.kv.v2.read_secret(mount_point='Key-Value', path='/aws')
    # Access the secrets data
    aws_secret_data = aws_secret['data']['data']
    # AWS Auth Credentials
    COGNITO_USER_POOL_ID = aws_secret_data['user_pool_id']
    COGNITO_APP_CLIENT_ID = aws_secret_data['app_client_id']
    COGNITO_AWS_REGION = aws_secret_data['region']
    COGNITO_CLIENT_SECRET = aws_secret_data['client_secret']

    # AWS S3 (Simple Storage Service) Credentials
    AWS_S3_ACCESS_KEY_ID = aws_secret_data['s3_access_key']
    AWS_S3_SECRET_ACCESS_KEY = aws_secret_data['s3_secret_key']
    AWS_S3_STORAGE_BUCKET_NAME = aws_secret_data['s3_bucket']
    AWS_S3_REGION_NAME = aws_secret_data['region']
    AWS_S3_DEFAULT_ACL = aws_secret_data['s3_acl'] # Access Control Lists

else:
    print('Could not authenticate with Vault server')




# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Riyadh'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATIC_URL = 'static/'




